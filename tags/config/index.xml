<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>config | bdcaf</title><link>/tags/config/</link><atom:link href="/tags/config/index.xml" rel="self" type="application/rss+xml"/><description>config</description><generator>Source Themes Academic (https://sourcethemes.com/academic/)</generator><language>en-us</language><copyright>Clemens Ager 2020</copyright><lastBuildDate>Mon, 29 Jan 2018 10:49:51 +0100</lastBuildDate><image><url>img/map[gravatar:%!s(bool=false) shape:circle]</url><title>config</title><link>/tags/config/</link></image><item><title>Github pages</title><link>/post/todayilearnt/2018-move/</link><pubDate>Mon, 29 Jan 2018 10:49:51 +0100</pubDate><guid>/post/todayilearnt/2018-move/</guid><description>&lt;p>Now this site is on
&lt;a href="https://pages.github.com" target="_blank" rel="noopener">github pages&lt;/a>.&lt;br>
I had already repos on github for some time and trusted it - only
private repos I keep on other places. But mostly I was
missing some features a bplaced so now the move. Mostly I like that I
can now post new content via git so I just need to transfer new posts
and not the whole site. That now the site is &lt;code>https&lt;/code> secured is a
nice boon.&lt;/p>
&lt;p>It took me some time to reconfigure my
&lt;a href="https://gohugo.io" target="_blank" rel="noopener">hugo&lt;/a> blog for the pages here&amp;rsquo;s what I learnt:&lt;/p>
&lt;ul>
&lt;li>the name of the repo must be &lt;code>username.github.io&lt;/code> - at first I had
the impression &lt;code>username&lt;/code> was enough, and also some guides would
describe how to use gitlab instead.&lt;/li>
&lt;li>for me github insists publishing the &lt;code>master&lt;/code> branch - so I had to
juggle around, the previous master got renamed to hugo doing: &lt;code>git branch -m master hugo&lt;/code>. I had already ignored the &lt;code>public&lt;/code>
directory, and had to delete the original master from online and
recreate it empty - but I think one can streamline that.
Then added the master using worktree in public: &lt;code>git worktree add -B master public origin/master&lt;/code>&lt;/li>
&lt;li>the url in &lt;code>config.toml&lt;/code> should be &lt;code>https://username.github.io/&lt;/code> -
notice the trailing slash.&lt;/li>
&lt;li>I can then use the &lt;code>hugo&lt;/code> command to build my site. And publish
using &lt;code>cd public; git add . ; git commit -am pub; git push; cd ..&lt;/code> - I&amp;rsquo;m in
&lt;a href="https://fishshell.com" target="_blank" rel="noopener">fish&lt;/a> - many others use &lt;code>&amp;amp;&amp;amp;&lt;/code> instead.&lt;/li>
&lt;li>I tried putting my binaries under &lt;code>git lfs&lt;/code> - so far it seems to
work. I will write back in case anything shows up.&lt;/li>
&lt;li>It takes a minute till the change shows up. So I need to be
patient.&lt;/li>
&lt;/ul>
&lt;p>So there we are on github now&amp;hellip;&lt;/p></description></item><item><title>Configuring offlineimap</title><link>/post/2017/2017-03-30_offlineimap/</link><pubDate>Thu, 30 Mar 2017 10:48:59 +0200</pubDate><guid>/post/2017/2017-03-30_offlineimap/</guid><description>&lt;p>Having most of my workflow on the commandline mailing my results using
Tunderbird or Mail.app is sometimes quite a chore. I would rather do
it from inside my workflow.
&lt;a href="http://www.mutt.org/" target="_blank" rel="noopener">mutt&lt;/a> seems like a
natural option. I also quite quickly considered alternatives like
&lt;a href="https://www.washington.edu/alpine/" target="_blank" rel="noopener">alpine&lt;/a> - though since I prefer
vim for my text editing I quickly decided against it.&lt;/p>
&lt;h2 id="offlineimap">offlineimap&lt;/h2>
&lt;p>For mutt it quickly became aparent that I would need some external
tool to fetch my mail. Many sites describe
&lt;a href="http://www.offlineimap.org/" target="_blank" rel="noopener">offlineimap&lt;/a> though as the maintainer
put a message that he moved on to
&lt;a href="https://github.com/OfflineIMAP/imapfw" target="_blank" rel="noopener">imapfw&lt;/a> I was worried. Also
my first attempt didn&amp;rsquo;t work out so I quickly decided I wanted to go
with a &amp;ldquo;maintained&amp;rdquo; project.&lt;/p>
&lt;p>So ultimately I ended at
&lt;a href="http://isync.sourceforge.net/" target="_blank" rel="noopener">isync&lt;/a>.&lt;/p>
&lt;p>Initial configurations that I frankensteined together didn&amp;rsquo;t work
either so I had to go on debugging.&lt;/p>
&lt;h3 id="certificate-woes">certificate woes&lt;/h3>
&lt;p>I immediately got certificate errors. Even for google. In the
configuration the have a commented line for certificates in the home
directory. So I decided to get them for myself. Since I am behind
the universities firewall in the same subnet as the mail servers I was
not to worried that someone might MITM me bad certs.&lt;/p>
&lt;p>In short I used&lt;/p>
&lt;pre>&lt;code>[~]$ openssl s_client -connect mailserver.uni.ac.at:993 -showcerts &amp;gt; crt
&lt;/code>&lt;/pre>
&lt;p>to download them. Basically I replace mailserver.uni.ac.at with my
servers. Then I used trusty old vim to cut the blocks from
&lt;code> -----BEGIN CERTIFICATE-----&lt;/code> down to &lt;code>-----END CERTIFICATE-----&lt;/code>
(including those lines) into individual files which I named based on
the identification before the blocks.&lt;/p>
&lt;h3 id="passwords">passwords&lt;/h3>
&lt;p>Along with this certificate issues I noticed that passwords often are
put in plain text in the config files. An absolute no-go for me. I
quickly discovered
&lt;a href="https://www.passwordstore.org/" target="_blank" rel="noopener">pass&lt;/a> which uses
gpg to encrypt them.&lt;/p>
&lt;p>Sure still worried as these are then passed around in plain text - but
at least I will not have them in my repositories on github.&lt;/p>
&lt;h3 id="oh-gmail">oh gmail&lt;/h3>
&lt;p>since most tutorials explicitely explain how to set up gmail I was
confused why it just wouldn&amp;rsquo;t work for me!
It just wouldn&amp;rsquo;t accept the password. After long and useless research
I recalled something was changed by google. You can now
&lt;a href="https://support.google.com/accounts/answer/185833" target="_blank" rel="noopener">create
passwords for less secure
apps&lt;/a> - and that
was it. All I had to do was create an app password on the linked
site. Nice - so now even in the encrypted store is my google password
and I can easily delete the one for the app.&lt;/p>
&lt;h3 id="final-config">final config&lt;/h3>
&lt;p>so this is what is in my &lt;code>.mbsyncrc&lt;/code>. I don&amp;rsquo;t want to post it as big
text block as one needs to fill in the values that fit ones setup.&lt;/p>
&lt;h5 id="accounts">accounts&lt;/h5>
&lt;pre>&lt;code>IMAPAccount uibk
Host exchange.uibk.ac.at
User c....
AuthMechs LOGIN
PassCmd &amp;quot;pass Mail/uibk&amp;quot;
SSLType IMAPS
SSLVersions TLSv1.2
CertificateFile ~/.cert/uibk.crt
IMAPAccount gmail
Host imap.gmail.com
User ....@gmail.com
AuthMechs LOGIN
PassCmd &amp;quot;pass Mail/gmail&amp;quot;
SSLType IMAPS
SSLVersions TLSv1.2
CertificateFile ~/.cert/gmail.crt
&lt;/code>&lt;/pre>
&lt;h3 id="stores">stores&lt;/h3>
&lt;p>nothing fancy here&lt;/p>
&lt;pre>&lt;code>IMAPStore uibk-remote
Account uibk
MaildirStore uibk-local
Path ~/Archive/Mail/Uibk/
Inbox ~/Archive/Mail/Uibk/Inbox
IMAPStore gmail-remote
Account gmail
MaildirStore gmail-local
Path ~/Archive/Mail/Gmail/
Inbox ~/Archive/Mail/Gmail/Inbox
&lt;/code>&lt;/pre>
&lt;p>though it was essential to create the folders using
&lt;code>mkdir -p ~/Archive/Mail/Gmail&lt;/code>.&lt;/p>
&lt;p>and finally &lt;code>mbsync uibk gmail&lt;/code> will work without error.&lt;/p>
&lt;h3 id="check-automatically">check automatically&lt;/h3>
&lt;p>Gotta leave this for now. I see there is an issue with cron on Mac.&lt;/p>
&lt;h2 id="mutt-later">Mutt later&lt;/h2>
&lt;p>Wow this got quite some post. I will describe how to set up mutt next
time.&lt;/p></description></item></channel></rss>