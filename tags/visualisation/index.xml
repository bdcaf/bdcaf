<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>visualisation on bdcaf</title><link>/tags/visualisation/</link><description>Recent content in visualisation on bdcaf</description><generator>Hugo -- gohugo.io</generator><language>en-us</language><lastBuildDate>Fri, 28 Dec 2018 09:31:46 +0100</lastBuildDate><atom:link href="/tags/visualisation/index.xml" rel="self" type="application/rss+xml"/><item><title>Seeing statistics</title><link>/post/links/seeing_statistics/</link><pubDate>Fri, 28 Dec 2018 09:31:46 +0100</pubDate><guid>/post/links/seeing_statistics/</guid><description>&lt;p>There is a nice introducition to statistics with visualisation of the
concepts at &lt;a href="https://seeing-theory.brown.edu/index.html">seeing theory&lt;/a>&lt;/p>
&lt;p>Takes about 20 minutes to click through.&lt;/p></description></item><item><title>Mass spectra visualization</title><link>/post/2016/2016-01-hilbertptr/</link><pubDate>Wed, 30 Mar 2016 00:00:00 +0000</pubDate><guid>/post/2016/2016-01-hilbertptr/</guid><description>&lt;p>I saw some &lt;a href="http://datadrivensecurity.info/blog/posts/2015/Jan/mapping-ipv4-address-in-hilbert-space/">nice visualiztion for IP
adresses&lt;/a>
which made use of the hilbert curve for mapping sequatial data into an
area. This has the nice benefit of assuring numbers that are close to
each other stay close in two dimensions as well. Unfortunately the
opposite does not hold. Conveniently a function to produce a hilbert
curve is provided via
&lt;a href="https://bioconductor.org/packages/release/bioc/html/HilbertVis.html">HilbertVis&lt;/a>
on bioconductor.&lt;/p></description></item></channel></rss>